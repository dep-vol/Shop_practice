{"version":3,"sources":["components/Order/OrderForm.module.css","components/Order/NewModal.module.css","components/SideMenu/SideMenu.module.css","components/Cart/Cart.module.css","components/CartCard/CartCard.module.css","components/Products/Products.module.css","App.module.css","components/Counter/Counter.module.css","components/LoadingScreen/LoadingScreen.module.css","img/cart.jpg","components/ResultScreen/ResultScreen.module.css","img/iphone_PNG5733.png","HOCs/withStore.js","components/SideMenu/SideMenu.js","components/CartCard/CartCard.js","App.js","serviceWorker.js","store/cart.js","store/order.js","store/products.js","store/activeProducts.js","api/helpers/makeRequest.js","api/products.js","api/cart.js","store/rootStore.js","components/Counter/AppInput.js","components/Counter/Counter.js","components/Cart/Cart.js","components/Cart/Container/Cart.js","components/Order/NewModal.js","components/Order/OrderForm.js","components/ResultScreen/ResultScreen.js","components/Product.js","components/Products/Products.js","components/Products/Container/Products.js","routes/routes.js","components/LoadingScreen/LoadingScreen.js","index.js"],"names":["module","exports","Component","inject","observer","SideMenu","props","className","styles","container","to","txt","activeClassName","active","exact","withStore","cartModel","stores","cart","logo","src","img","body","h_title","totalCount","total","App","Components","header","mainContainer","main","defaultProps","Boolean","window","location","hostname","match","Cart","rootStore","this","api","storage","token","getItem","load","cartLoad","then","data","products","needUpdate","setItem","id","cnt","activeProducts","changeAct","index","findIndex","pr","changeCount","res","delItem","splice","add","push","console","log","clean","map","getProduct","detailedProducts","reduce","t","price","some","observable","action","computed","Order","lastOrderCache","consumer","name","email","phone","el","e","valid","target","type","test","value","setConsumer","succes","error","Warehouse","Promise","resolve","reject","loadAll","setTimeout","forEach","i","toString","productsMap","state","actionState","makeRequest","url","fetch","response","status","text","Error","json","localStorage","order","warehouse","AppInput","input","React","createRef","makeChange","preventDefault","onChange","prevProps","prevState","inp","current","ref","nativeProps","defaultValue","onBlur","onKeyPress","key","Counter","inpValue","plus","set","minus","parseInt","isNaN","newCnt","counter","Math","max","min","setState","form","btnCounter","onClick","disabled","tBody","productsRow","colSpan","align","routesMap","go","CartContainer","productsRows","product","title","rest","change","btnDanger","deleteItem","NewModal","show","handleShow","handleClose","setCache","history","result","createModalRef","element","modal","btnGo","modal3","closeContainer","close","btnSucess","snapshot","modal1","OrderForm","orderModel","validate","invalid","onSubmit","htmlFor","check","invalidMsg","btnBack","params","inCart","style","marginRight","addCartItem","Products","btn","btnSuccess","card","cardLink","ProductsContainer","routes","component","ResultScreen","Product","route","hasOwnProperty","overlayLoader","loader","path","ReactDOM","render","LoadingScreen","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af121a23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OrderForm_container__jWC73\",\"form\":\"OrderForm_form__3LvHM\",\"input\":\"OrderForm_input__1J61X\",\"invalid\":\"OrderForm_invalid__3iWy_\",\"valid\":\"OrderForm_valid__3MDqX\",\"invalidMsg\":\"OrderForm_invalidMsg__3lG12\",\"btnBack\":\"OrderForm_btnBack__SuyZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal1\":\"NewModal_modal1__2KXUm\",\"modal3\":\"NewModal_modal3__2x_Rs\",\"body\":\"NewModal_body__12UBF\",\"closeContainer\":\"NewModal_closeContainer__1LNg8\",\"close\":\"NewModal_close__2DjRM\",\"btnSucess\":\"NewModal_btnSucess__tt55x\",\"btnGo\":\"NewModal_btnGo__31ch0\",\"btnDanger\":\"NewModal_btnDanger__22b6k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SideMenu_container__yOk0v\",\"txt\":\"SideMenu_txt___WgMc\",\"active\":\"SideMenu_active__N5Tgf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cart_container__1f835\",\"tBody\":\"Cart_tBody__3weEk\",\"btnDanger\":\"Cart_btnDanger__2VEIY\",\"go\":\"Cart_go__2-1xx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CartCard_container__2dNtM\",\"logo\":\"CartCard_logo__BJwBY\",\"cart\":\"CartCard_cart__25rkv\",\"body\":\"CartCard_body__2z4ek\",\"h_title\":\"CartCard_h_title__3o9V1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Products_main__3TKS3\",\"card\":\"Products_card__2Iwl1\",\"btnSuccess\":\"Products_btnSuccess__2wE1f\",\"btnDanger\":\"Products_btnDanger__2IeNB\",\"cardLink\":\"Products_cardLink__38-oa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"header\":\"App_header__3ZZ1n\",\"mainContainer\":\"App_mainContainer__2o5r7\",\"textCenter\":\"App_textCenter__1TO60\",\"main\":\"App_main__3ZkGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Counter_form__KmPvy\",\"btnCounter\":\"Counter_btnCounter__OaHc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlayLoader\":\"LoadingScreen_overlayLoader__LV5AY\",\"loader\":\"LoadingScreen_loader__2RHMm\",\"rotateAnim\":\"LoadingScreen_rotateAnim__1Q49Q\"};","module.exports = __webpack_public_path__ + \"static/media/cart.6b1a547c.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ResultScreen_container__OOSPm\"};","module.exports = __webpack_public_path__ + \"static/media/iphone_PNG5733.cea54723.png\";","import { inject, observer } from \"mobx-react\";\n\nexport default function (Component) {\n    return inject('stores')(observer(Component))\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './SideMenu.module.css'\n\nfunction SideMenu(props) {\n  return (\n    <div className={styles.container}>\n      <ul>\n        <li>\n          <NavLink to='/' className={styles.txt} activeClassName={styles.active} exact>Home</NavLink>\n        </li>\n        <li>\n          <NavLink to='/cart' className={styles.txt} activeClassName={styles.active} exact>Cart</NavLink>\n        </li>\n        <li>\n          <NavLink to='/order' className={styles.txt} activeClassName={styles.active} exact>Buy\n            now</NavLink>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\n    \nexport default SideMenu;","import React from 'react';\nimport styles from './CartCard.module.css';\nimport withStore from '../../HOCs/withStore';\nimport img from '../../img/cart.jpg';\n\n\nfunction CartCard(props) {\n    let cartModel = props.stores.cart;\n    return (\n        <div className={styles.container}>\n            <div className={styles.logo}>MEGA TECTO SHOP</div>\n            <div className={styles.cart}>\n                <img src={img} />\n                <div className={styles.body}>\n                    <div className={styles.h_title}>Total in Cart:\n\n                    </div>\n                    <div>\n                        Count: {cartModel.totalCount}\n                    </div>\n                    <div>\n                        Total price: {cartModel.total}\n                    </div>\n\n                </div>\n            </div>\n\n\n        </div>\n    )\n\n}\n\nexport default withStore(CartCard);\n","import React from 'react';\nimport styles from './App.module.css'\nimport withStore from \"./HOCs/withStore\";\nimport SideMenu from './components/SideMenu/SideMenu';\nimport CartCard from './components/CartCard/CartCard';\nimport { Switch } from \"react-router-dom\";\nimport * as PropTypes from 'prop-types';\nimport {element} from \"prop-types\";\n\n\nconst App = (props) => {\n    let {Components} = props;\n\n    return (\n        <>\n            <div className={styles.container}>\n                <div className={styles.header}>\n                    <CartCard/>\n                    {/*<hr/>*/}\n                </div>\n                <div className={styles.mainContainer}>\n                    <SideMenu/>\n                    <div className={styles.main}>\n                        <Switch>\n                            {Components}\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};\nApp.propTypes = {\n    stores: PropTypes.object,\n    Components: PropTypes.arrayOf(element)\n};\n\nApp.defaultProps = {\n    stores:{},\n    Components:[]\n};\n\n\nexport default withStore(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {observable,action,computed} from 'mobx';\n\nclass Cart {\n\n    constructor (rootStore) {\n        this.rootStore = rootStore;\n        this.api = this.rootStore.api.cart;\n        this.storage = this.rootStore.storage;\n        this.token = this.storage.getItem('cartToken');\n        this.load()\n    }\n   \n\n    @observable products = [];\n\n    @action load() {\n        this.api.cartLoad(this.token).then((data) => {\n            this.products = data.cart;\n            \n            if(data.needUpdate){\n                this.token = data.token;\n                this.storage.setItem('cartToken', this.token);\n            }\n        });\n    }\n   \n\n    @action change(id, cnt) {\n        this.rootStore.activeProducts.changeAct(id)\n        let index = this.products.findIndex((pr) => pr.id === id)\n        this.api.changeCount(this.token,id,cnt).then((res) => {\n            if (res) {\n                this.products[index].cnt = cnt;\n                this.rootStore.activeProducts.changeAct(id)\n            }\n        })\n        \n    }\n\n    @action deleteItem(id) {\n        this.rootStore.activeProducts.changeAct(id)\n        let index = this.products.findIndex((pr) => pr.id === id)\n        this.api.delItem(this.token,id).then((res)=>{\n            if (res) {\n                this.products.splice(index, 1);\n                this.rootStore.activeProducts.changeAct(id)\n            }\n        })\n        \n    }\n\n    @action addCartItem(id) {\n        this.rootStore.activeProducts.changeAct(id)\n        this.api.add(this.token,id).then((res)=>{\n            if (res) {\n\n                this.products.push({ 'id': id, 'cnt': 1 })\n                this.rootStore.activeProducts.changeAct(id)\n\n\n            }\n            else {\n                console.log('wtf')\n            }\n            \n        })\n        \n    }\n\n    @computed get detailedProducts() {\n        return this.products.map((pr)=>{\n           return {...this.rootStore.products.getProduct(pr.id), cnt:pr.cnt} \n        })\n    }\n\n    @computed get total() {\n        return this.detailedProducts.reduce((t, pr) => t + pr.price * pr.cnt, 0);\n    }\n\n    @computed get inCart() {\n        return (id) => this.products.some((pr) => pr.id === id)\n    }\n\n    \n    @computed get totalCount() {\n        return this.products.reduce((t, pr) => t + pr.cnt, 0);\n    }\n\n    @action clean() {\n       \n        this.api.clean(this.token).then((res) => {\n            if (res) {\n                this.products = [];\n            }\n        })\n        \n    }\n\n\n     \n\n}\n\n\n\nexport default Cart;\n\n\n\n\n","import { observable, action, computed } from 'mobx';\n\nclass Order {\n    constructor (rootStore) {\n        this.rootStore = rootStore;\n    }\n\n    @observable consumer = {\n        name: '',\n        email: '',\n        phone: ''\n    };\n\n    @observable valid = {\n        name:'',\n        email:'',\n        phone:''\n    };\n\n    @observable lastOrderCache = {consumer:{}, total:null}\n\n    @action setConsumer = (el) => {\n        this.consumer = {...this.consumer,...el};\n    };\n\n    @action setCache() {\n       \n        this.lastOrderCache = {...this.lastOrderCache, consumer:this.consumer, total:this.rootStore.cart.total}\n        \n    }\n\n    @action error = (e)=> {\n        this.valid[e.target.id] = 'invalid'\n    }\n    @action succes = (e) => {\n        this.valid[e.target.id] = 'valid'\n    }\n\n    @action check = (e, type) => {\n        switch (type) {\n            case 'name': {\n                let pattern = /^[a-zA-Zа-яА-Я'][a-zA-Zа-яА-Я-' ]+[a-zA-Zа-яА-Я']?$/u;\n                if(pattern.test(e.target.value)) {\n                    this.setConsumer({name:e.target.value});\n                    this.succes(e);\n                }  \n                else {\n                    this.error(e,'name');\n                } \n                break;\n            }\n            case 'email': {\n                let pattern = /^[^@]+@[^@.]+\\.[^@]+$/;\n                if(pattern.test(e.target.value)) {\n                    this.setConsumer({email:e.target.value})\n                    this.succes(e);\n                }\n                else {\n                    this.error(e,'name');\n                }\n                break;\n            }\n            case 'phone': {\n                let pattern = /^\\+?[78][-(]?\\d{3}\\)?-?\\d{3}-?\\d{2}-?\\d{2}$/ ;\n                if(pattern.test(e.target.value)) {\n                    this.setConsumer({phone:e.target.value});\n                    this.succes(e);\n                }\n                else {\n                    this.error(e,'name');\n                }\n                break;\n            }\n            default: console.log('error')\n       \n    }\n};\n    @computed get status() {\n        return !((this.consumer.name !== '') && (this.consumer.email !== '') && (this.consumer.phone !== ''));\n    }\n\n}\n\nexport default Order;","import {observable,action,computed} from 'mobx';\n\n\nclass Warehouse {\n\n    constructor (rootStore) {\n        this.rootStore = rootStore;\n        this.api = this.rootStore.api.products;\n        \n    }\n   \n    @observable products = [];\n\n    @action load() {\n        return new Promise((resolve,reject) => {\n            \n            this.api.loadAll().then((data) => {\n\n                setTimeout(()=>{\n                    this.products = data\n                    resolve(true);\n                    \n                },200)\n                \n            })\n        })\n       \n    }\n\n    @computed get productsMap () {\n        let map = {};\n        this.products.forEach((pr,i) => map[pr.id.toString()] = i);\n        return map\n        }\n    \n   \n   \n    @computed get getProduct () {\n       return (id)=>this.products[this.productsMap[id]]\n    }\n\n\n   \n\n\n}\n\nexport default Warehouse;\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { observable, action, computed } from 'mobx';\n\nclass activeProducts {\n    constructor (rootStore) {\n        this.rootStore = rootStore;\n    }\n    @observable actionState = {}\n\n    @action changeAct = (id,state = this.actionState[id] || false ) => {\n        this.actionState[id] = !state\n    }\n\n    \n   \n\n}\n\nexport default activeProducts;","let baseUrl = 'https://market-try.000webhostapp.com/';\n\nexport default function makeRequest(url) {\n    let fetchUrl = baseUrl + url; \n    return fetch(fetchUrl).then((response) => {\n        if(response.status!==200) {\n            return response.text().then((text) => {\n                throw new Error(text)\n            })\n        }\n        else {\n            return response.json()\n        }\n    })\n\n}","import makeRequest from \"./helpers/makeRequest\";\n\nfunction loadAll() {\n   return makeRequest('products/all.php')\n}\n\nexport { loadAll }","import makeRequest from \"./helpers/makeRequest\";\n\nfunction cartLoad(token) {\n   let url = 'cart/load.php'\n   if (token !== null) {\n       url+=`?token=${token}`\n   }\n   \n    return makeRequest(url)\n}\n\nfunction add(token,id) {\n    return makeRequest(`cart/add.php?token=${token}&id=${id}`)\n}\n\nfunction delItem(token,id) {\n    return makeRequest(`cart/remove.php?token=${token}&id=${id}`)\n}\n\nfunction changeCount(token,id,cnt) {\n    return makeRequest(`cart/change.php?token=${token}&id=${id}&cnt=${cnt}`)\n}\n\nfunction clean(token) {\n    return makeRequest(`cart/clean.php?token=${token}`)\n}\n\nexport { cartLoad, add, delItem, changeCount, clean }","import cartModel from './cart';\nimport order from './order';\nimport warehouse from './products';\nimport activeProducts from './activeProducts';\nimport * as products from '../api/products'\nimport * as cart from '../api/cart'\n\n\nclass RootStore {\n    constructor(){\n        this.api = {\n            products,\n            cart\n        }\n\n        this.storage = localStorage;\n        \n\n        this.cart = new cartModel(this);\n        this.order = new order(this);\n        this.products = new warehouse(this)\n        this.activeProducts = new activeProducts(this)\n    }\n    \n\n}\n\nexport default new RootStore();","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AppInput extends React.Component {\n\n    static defaultProps = {\n        onChange: function(e){},\n        nativeProps: {}\n    }\n    \n    static propTypes = {\n        value: PropTypes.any.isRequired,\n        onChange: PropTypes.func,\n        nativeProps: PropTypes.object\n    }\n\n    input = React.createRef();\n\n    componentDidUpdate(prevProps, prevState) {\n        let inp = this.input.current;\n\n        if (prevProps.value !== this.props.value ||\n            this.props.value !== inp.value\n        ) {\n            inp.value = this.props.value;\n        }\n    }\n\n    makeChange = (e) => {\n        e.preventDefault();\n        if (this.props.value !== e.target.value) {\n            this.props.onChange(e);\n        }\n    }\n\n    render() {\n        return (\n                <input ref={this.input} {...this.props.nativeProps} \n                       defaultValue={this.props.value}\n                       onBlur={this.makeChange}\n                       onKeyPress={(e)=>e.key==='Enter'? this.makeChange(e):null}\n                ></input>\n\n        )\n    }\n}\n\nexport default AppInput;","import React from 'react';\nimport AppInput from './AppInput';\nimport PropTypes from 'prop-types';\nimport styles from './Counter.module.css'\n\nclass Counter extends React.Component{\n\n    static defaultProps = {\n        onChange: function(cnt){}\n    }\n\n    static propTypes = {\n        min: PropTypes.number.isRequired,\n        max: PropTypes.number.isRequired,\n        cnt: PropTypes.number.isRequired,\n        onChange: PropTypes.func\n    }\n\n    state = {inpValue:this.props.cnt};\n\n    plus = () => {\n        this.set(this.props.cnt + 1)\n    }\n    \n    minus = () => {\n        this.set(this.props.cnt - 1)\n    }\n\n    onChange = (e)=> {\n        let cnt = parseInt(e.target.value);\n        this.set(isNaN(cnt) ? this.props.cnt : cnt);\n    }\n\n\n    set(newCnt) {\n        let counter = Math.max(Math.min(newCnt, this.props.max), this.props.min);\n        this.setState(\n            { inpValue: counter });\n        this.props.onChange(counter)\n    }\n\n\n    render() {\n        return (\n            \n            <div className={styles.form} >\n               \n                <button className={styles.btnCounter} onClick={this.minus} disabled={this.props.disabled}>-</button>\n                <AppInput \n                nativeProps={{type:'text', className:'form-control'}}\n                value={this.props.cnt}\n                onChange={this.onChange}\n                />\n                <button className={styles.btnCounter} onClick={this.plus} disabled={this.props.disabled}>+</button>\n            </div>\n\n            \n        )\n    }\n\n}\n\nexport default Counter;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {routesMap} from '../../routes/routes';\nimport PropTypes, {element} from 'prop-types';\nimport styles from './Cart.module.css'\n\nfunction Cart (props) {\n    return (\n      <div className={styles.container}>\n        <h2>Cart</h2>\n        <table>\n          <tbody>\n          <tr className={styles.tBody}>\n            <td>Title</td>\n            <td>Price</td>\n            <td>Count</td>\n            <td>Total</td>\n            <td>Delete item</td>\n          </tr>\n          {props.productsRow}\n          <tr className={styles.tBody}>\n            <td colSpan='3' align='right' >Final amount:</td>\n            <td>{props.total}</td>\n          </tr>\n          </tbody>\n        </table>\n        <Link to={routesMap['order']} className={styles.go}> Make order </Link>\n      </div>\n    )\n}\n//...Types...\n  Cart.propTypes = {\n    productsRow: PropTypes.arrayOf(element),\n    total: PropTypes.number\n  };\n  Cart.defaultProps = {\n    productsRow: [],\n    total:0\n  };\n//...Types...\n\nexport default Cart;","import React from 'react';\nimport AppMinMax from '../../Counter/Counter';\nimport withStore from '../../../HOCs/withStore'\nimport Cart from \"../Cart\";\nimport PropTypes from 'prop-types';\nimport styles from '../Cart.module.css'\n\nclass CartContainer extends React.Component {\n  //...Types...\n  static propTypes = {\n    stores: PropTypes.object\n  };\n  static  defaultProps = {\n    stores: {}\n  };\n  //...Types...\n\n  render() {\n\n    let cartModel = this.props.stores.cart;\n    let productsRows = cartModel.detailedProducts.map((product) => {\n\n      return (\n        <tr key={product.id}>\n          <td>{product.title}</td>\n          <td>{product.price}</td>\n          <td>\n            <AppMinMax min={1}\n                       max={product.rest}\n                       cnt={product.cnt}\n                       onChange={(cnt) => cartModel.change(product.id, cnt)}\n                       disabled={this.props.stores.activeProducts.actionState[product.id]}\n            />\n          </td>\n          <td>{product.cnt * product.price}</td>\n          <td>\n            <button className={styles.btnDanger} onClick={(e) => cartModel.deleteItem(product.id)}\n                    disabled={this.props.stores.activeProducts.actionState[product.id]}>Delete\n            </button>\n          </td>\n        </tr>\n      )\n    });\n    return (\n      <Cart productsRow={productsRows} total={cartModel.total}/>\n    )\n  }\n}\n\nexport default withStore(CartContainer);","import React from 'react';\nimport styles from './NewModal.module.css';\nimport {routesMap} from \"../../routes/routes\";\nimport {inject} from \"mobx-react\";\nimport * as PropTypes from 'prop-types'\n\n\n@inject('stores') class NewModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.modal = null;\n  }\n\n  //Prop-Types\n  //***\n  static propTypes = {\n    stores:PropTypes.object\n  };\n  static defaultProps = {\n    stores:{}\n  };\n  //***\n\n  state = {\n    show:false\n  };\n  handleShow = (e)=> {\n    e.preventDefault();\n    this.setState({show:true})\n  };\n  handleClose = (e)=> {\n    e.preventDefault();\n    this.setState({show:false})\n  };\n  succes = () => {\n    this.props.stores.order.setCache();\n    this.props.stores.cart.clean();\n    this.props.history.push(routesMap.result)\n  };\n  createModalRef = element => this.modal = element;\n\n  render() {\n\n    let order = this.props.cartModel.detailedProducts.map((product)=>{\n      return (\n        <tr key={product.id}>\n          <td>{product.title}</td>\n          <td>{product.price}</td>\n          <td>{product.cnt}</td>\n          <td>{product.cnt * product.price}</td>\n        </tr>\n      );\n    });\n    return(\n      <>\n        <button onClick={this.handleShow} className={styles.btnGo} disabled={this.props.stores.order.status}>Confirm</button>\n      <div className={styles.modal3} ref={this.createModalRef}>\n             <div className={styles.body} >\n        <div className={styles.closeContainer}>\n          <div className={styles.close} onClick={this.handleClose}>\n            &#215;\n          </div>\n        </div>\n\n        <h3>Please, check and confirm your order:</h3>\n        <table className='table table-bordered table-striped'>\n          <tbody>\n          <tr>\n            <td>Title</td>\n            <td>Price</td>\n            <td>Count</td>\n            <td>Total</td>\n          </tr>\n          {order}\n          <tr>\n            <td colSpan='3' align='right' className='font-weight-bold'>Final amount:</td>\n            <td className='font-weight-bold'>{this.props.cartModel.total}</td>\n          </tr>\n          </tbody>\n\n        </table>\n\n        <button className={styles.btnSucess} onClick={this.succes} >\n          Confirm\n        </button>\n\n      </div>\n    </div>\n        </>\n    )\n\n  }\n\n componentDidUpdate(prevProps, prevState, snapshot) {\n   if(this.state.show === true) {\n     this.modal.className = styles.modal1;\n   }\n   else {\n     this.modal.className = styles.modal3\n   }\n }\n\n}\n\nexport default NewModal","import React from 'react';\nimport AppInput from '../Counter/AppInput';\nimport styles from './OrderForm.module.css';\nimport withStore from '../../HOCs/withStore'\nimport NewModal from \"./NewModal\";\nimport {routesMap} from \"../../routes/routes\";\nimport {Link} from \"react-router-dom\";\nimport * as PropTypes from 'prop-types'\n\nclass OrderForm extends React.Component {\n\n  // Prop-types\n  //***\n  static propTypes = {\n    stores:PropTypes.object\n  };\n  static defaultProps = {\n    stores:{}\n  };\n  //***\n\n  render() {\n\n    let orderModel = this.props.stores.order;\n    let valid = orderModel.valid;\n\n    let validate = (inp) => {\n      switch (valid[inp]) {\n        case 'valid':\n          return `${styles.input} ${styles.valid}`;\n        case 'invalid':\n          return `${styles.input} ${styles.invalid}`;\n        default:\n          return `${styles.input}`\n      }\n    };\n\n    return (\n\n      <form className={styles.container} onSubmit={(e)=>e.preventDefault()}>\n        <h1>Confirm your account data, please:</h1>\n        <div className={styles.form}>\n          <label htmlFor=\"formGroupExampleInput\">Enter your name:</label>\n          <AppInput nativeProps={{\n                    type: 'text',\n                    className: validate('name'),\n                    id: 'name'\n                    }}\n                    value={orderModel.consumer.name}\n                    onChange={(e) => orderModel.check(e, 'name')}/>\n          <div className={styles.invalidMsg}></div>\n        </div>\n        <div className={styles.form}>\n          <label htmlFor=\"formGroupExampleInput2\">E-mail:</label>\n          <AppInput nativeProps={{\n                    type: 'text',\n                    className: validate('email'),\n                    id: 'email'\n                    }}\n                    value={orderModel.consumer.email}\n                    onChange={(e) => orderModel.check(e, 'email')}/>\n          <div className={styles.invalidMsg}></div>\n        </div>\n        <div className={styles.form}>\n          <label htmlFor=\"formGroupExampleInput2\">Phone:</label>\n          <AppInput nativeProps={{\n                    type: 'text',\n                    className: validate('phone'),\n                    id: 'phone'\n                    }}\n                    value={orderModel.consumer.phone}\n                    onChange={(e) => orderModel.check(e, 'phone')}/>\n          <div className={styles.invalidMsg}></div>\n        </div>\n        <Link to={routesMap.cart}>\n          <button className={styles.btnBack}>Back</button>\n        </Link>\n        <NewModal cartModel={this.props.stores.cart} history={this.props.history}/>\n      </form>\n    )\n  }\n}\n\nexport default withStore(OrderForm)","import React from 'react';\nimport withStore from '../../HOCs/withStore';\nimport styles from './ResultScreen.module.css';\n\nfunction ResultScreen(props) {\n    return (\n        <div className={styles.container}>\n            <h1 className='h1'>Congratulations!</h1>\n            <p>Dear {props.stores.order.lastOrderCache.consumer.name}. Your order with total amount {props.stores.order.lastOrderCache.total}$ is processing</p>\n            <p>We sent you mail to {props.stores.order.lastOrderCache.consumer.email} or calling to {props.stores.order.lastOrderCache.consumer.phone}</p>\n\n        </div>\n    )\n}\n\nexport default withStore(ResultScreen);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport withStore from '../HOCs/withStore';\n\nclass Product extends React.Component {\n\n    render() {\n\n        let cartModel = this.props.stores.cart;\n        let warehouse = this.props.stores.products;\n        let product = warehouse.getProduct(this.props.match.params.id);\n        let btn = ()=> {\n            if (!cartModel.inCart(product.id)) {\n                return <button className=\"btn btn-success\" onClick={() => cartModel.addCartItem(product.id)} style={{ marginRight: '5px' }} disabled={this.props.stores.activeProducts.actionState[product.id]}>Add to cart</button>\n            }\n            else {\n                return <button className=\"btn btn-danger\"\n                    onClick={() => { cartModel.deleteItem(product.id) }} style={{ marginRight: '5px' }} disabled={this.props.stores.activeProducts.actionState[product.id]}>Remove from cart</button>\n            }\n        }\n\n        if (!product) {\n            return (\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Product have not found</h5>\n                        <p className=\"card-text\">Please check your URL</p>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{product.title}</h5>\n                        <p className=\"card-text\">{product.text}</p>\n                        {btn()}\n                        <Link className=\"card-link\" to='/'>Back</Link>\n                    </div>\n                </div>\n\n\n            )\n        }\n\n    }\n\n}\n\nexport default withStore(Product) ","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {observer} from \"mobx-react\";\nimport styles from './Products.module.css';\nimport * as PropTypes from 'prop-types';\nimport img from '../../img/iphone_PNG5733.png';\n\nconst Products = (props) => {\n  let products = props.warehouse.products.map((product) => {\n    let btn;\n    if (!props.cartModel.inCart(product.id)) {\n      btn = <button className={styles.btnSuccess}\n                    onClick={() => props.cartModel.addCartItem(product.id)}\n                    disabled={props.activeProducts.actionState[product.id]}>\n        Add\n      </button>\n    } else {\n      btn = <button className={styles.btnDanger}\n                    onClick={() => {\n                      props.cartModel.deleteItem(product.id)\n                    }}\n                    disabled={props.activeProducts.actionState[product.id]}>\n        Remove\n      </button>\n    }\n    return (\n      <div className={styles.card} key={product.id}>\n          <h5>{product.title}</h5>\n        <img src={img} />\n        <p>\n          {product.text}\n          <Link className={styles.cardLink} to={`/product/${product.id}`}>\n            ...more info\n          </Link>\n        </p>\n\n\n\n        {btn}\n      </div>\n    )\n  });\n\n  return (\n    <div className={styles.main}>\n      {products}\n    </div>\n\n  )\n};\n\n//***\n// Types\n// ***\nProducts.propTypes = {\n  warehouse: PropTypes.object.isRequired,\n  cartModel: PropTypes.object.isRequired,\n  activeProducts:PropTypes.object.isRequired\n};\n\nProducts.defaultProps = {\n  warehouse: {},\n  cartModel: {},\n  activeProducts:{}\n};\n//***\n// Types\n// ***\nexport default observer(Products)","import React from 'react';\nimport withStore from '../../../HOCs/withStore';\nimport Products from \"../Products\";\nimport * as PropTypes from 'prop-types';\n\nclass ProductsContainer extends React.Component {\n//***\n// Types\n// ***\n    static propTypes = {\n        stores: PropTypes.object.isRequired\n    };\n    static defaultProps = {\n        stores: {}\n    };\n//***\n// Types\n// ***\n    render() {\n        let cartModel = this.props.stores.cart;\n        let warehouse = this.props.stores.products;\n        let activeProducts = this.props.stores.activeProducts;\n\n        return <Products cartModel={cartModel} warehouse={warehouse} activeProducts={activeProducts}/>\n    }\n}\nexport default withStore(ProductsContainer)","import Cart from '../components/Cart/Container/Cart'\nimport OrderForm from '../components/Order/OrderForm.js'\nimport ResultScreen from '../components/ResultScreen/ResultScreen.js'\nimport Product from '../components/Product.js';\nimport Products from \"../components/Products/Container/Products\";\n\nlet routes = [\n    {\n        name: 'index',\n        url: '/',\n        component: Products,\n        exact: true\n    },\n    {\n        name: 'cart',\n        url: '/cart',\n        component: Cart,\n        exact: true\n    },\n    {\n        name: 'order',\n        url: '/order',\n        component: OrderForm,\n        exact: true\n    },\n    {\n        name: 'result',\n        url: '/result',\n        component: ResultScreen,\n        exact: true\n    },\n    {\n        name: 'product',\n        url: '/product/:id',\n        component: Product,\n        exact: true\n    }\n   \n]\n\nlet routesMap = {};\n\nroutes.forEach((route) => {\n    if(route.hasOwnProperty('name')) {\n        routesMap[route.name] = route.url;\n    }\n\n})\n\nexport default routes;\nexport {routesMap}","import React from 'react';\nimport styles from './LoadingScreen.module.css'\n\nexport default function(props) {\n    return (\n      <div className={styles.overlayLoader}>\n        <div className={styles.loader}>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n        \n    )\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport stores from \"./store/rootStore\";\nimport routes from \"./routes/routes\";\nimport { Route } from \"react-router-dom\";\nimport { Provider } from \"mobx-react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport LoadingScreen from \"./components/LoadingScreen/LoadingScreen\";\n\nlet Components = routes.map((route) => {\n  return (\n    <Route\n      path={route.url}\n      component={route.component}\n      exact={route.exact}\n      key={route.url}\n    />\n  );\n});\n\nReactDOM.render(<LoadingScreen />, document.getElementById(\"root\"));\n\nstores.products.load().then(() => {\n  ReactDOM.render(\n    <Provider stores={stores}>\n      <Router>\n        <App Components={Components} />\n      </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}